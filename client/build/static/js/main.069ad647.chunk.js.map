{"version":3,"sources":["components/PetForm.jsx","components/PetHomePage.jsx","components/AllPets.jsx","components/EditPet.jsx","components/ShowPetDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["CreatePet","props","useState","name","setName","type","setType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","errors","setErrors","className","onSubmit","e","preventDefault","pets","axios","post","then","res","data","error","navigate","catch","err","console","log","onChange","target","value","properties","message","rows","columns","PetHomePage","pet","to","_id","AllPets","setPets","useEffect","get","role","aria-label","map","key","EditPet","put","ShowPetDetails","setTitle","likes","setLikes","onClick","delete","App","path","PetForm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kPAgEeA,EA5DG,SAACC,GAAW,IAAD,EACDC,mBAAS,IADR,mBAClBC,EADkB,KACZC,EADY,OAEDF,mBAAS,IAFR,mBAElBG,EAFkB,KAEZC,EAFY,OAGaJ,mBAAS,IAHtB,mBAGlBK,EAHkB,KAGLC,EAHK,OAKON,mBAAS,IALhB,mBAKlBO,EALkB,KAKRC,EALQ,OAMOR,mBAAS,IANhB,mBAMlBS,EANkB,KAMRC,EANQ,OAOWV,mBAAS,IAPpB,mBAOlBW,EAPkB,KAONC,EAPM,OASGZ,mBAAS,IATZ,mBASlBa,EATkB,KASVC,EATU,KAyBzB,OACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,kDACX,0BAAMC,SAjBG,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAO,CAAElB,OAAME,OAAME,cAAaE,WAAUE,WAAUE,cAC5DS,IAAMC,KAAK,qCAAsCF,GAC5CG,MAAK,SAAAC,GACEA,EAAIC,KAAKC,MACTX,EAAUS,EAAIC,KAAKC,MAAMZ,QAEzBa,YAAS,QAGhBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAOlB,uBAAGb,UAAU,kBAAb,cACA,2BAAOZ,KAAK,OAAO4B,SAAU,SAAAd,GAAC,OAAIf,EAAQe,EAAEe,OAAOC,UAClDpB,EAAOZ,KAAO,uBAAGc,UAAU,gBAAgBF,EAAOZ,KAAKiC,WAAWC,SAAe,GAClF,uBAAGpB,UAAU,mBAAb,cACA,2BAAOZ,KAAK,OAAO4B,SAAU,SAAAd,GAAC,OAAIb,EAAQa,EAAEe,OAAOC,UAClDpB,EAAOV,KAAO,uBAAGY,UAAU,eAAeF,EAAOV,KAAK+B,WAAWC,SAAe,GAEjF,uBAAGpB,UAAU,mBAAb,qBACA,8BAAUqB,KAAK,IAAIC,QAAQ,KAAKlC,KAAK,OAAO4B,SAAU,SAAAd,GAAC,OAAIX,EAAeW,EAAEe,OAAOC,UAClFpB,EAAOR,YAAc,uBAAGU,UAAU,eAAeF,EAAOR,YAAY6B,WAAWC,SAAe,GAE/F,uBAAGpB,UAAU,kBAAb,gBACA,6BACI,2BAAOA,UAAU,MAAMZ,KAAK,QAAQ4B,SAAU,SAAAd,GAAC,OAAIT,EAAYS,EAAEe,OAAOC,QAAQA,MAAO1B,KAE3F,6BACI,2BAAOQ,UAAU,MAAMZ,KAAK,QAAQ4B,SAAU,SAAAd,GAAC,OAAIP,EAAYO,EAAEe,OAAOC,QAAQA,MAAOxB,KAE3F,6BACI,2BAAOM,UAAU,MAAMZ,KAAK,QAAQ4B,SAAU,SAAAd,GAAC,OAAIL,EAAcK,EAAEe,OAAOC,QAAQA,MAAOtB,KAE7F,6BACI,2BAAOI,UAAU,uBAAuBZ,KAAK,SAAS8B,MAAM,aCnCrEK,EAhBK,SAACvC,GACjB,OACI,yBAAKgB,UAAU,gDACX,wBAAIA,UAAU,8BAA8BhB,EAAMwC,IAAItC,MACtD,uBAAGc,UAAU,kCAAb,aAAyDhB,EAAMwC,IAAIpC,MACnE,uBAAGY,UAAU,kCAAb,oBAAgEhB,EAAMwC,IAAIlC,aAC1E,uBAAGU,UAAU,kCAAb,eAA2DhB,EAAMwC,IAAIhC,SAArE,IAAgFR,EAAMwC,IAAI9B,SAA1F,IAAqGV,EAAMwC,IAAI5B,YAE/G,6BACI,kBAAC,IAAD,CAAMI,UAAU,yBAAyByB,GAAI,WAAazC,EAAMwC,IAAIE,KAApE,QACA,kBAAC,IAAD,CAAM1B,UAAU,yBAAyByB,GAAI,IAAMzC,EAAMwC,IAAIE,KAA7D,cCkBDC,EA5BC,SAAC3C,GAAW,IAAD,EACCC,mBAAS,IADV,mBAChBmB,EADgB,KACVwB,EADU,KAgBvB,OAJAC,qBAAU,WATNxB,IAAMyB,IAAI,mCACLvB,MAAK,SAAAC,GACFM,QAAQC,IAAIP,GACZM,QAAQC,IAAI,QAASP,EAAIC,KAAKe,KAC9BI,EAAQpB,EAAIC,KAAKe,QAEpBZ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAK/B,IAGC,6BACI,6BACI,+DACA,0BAAMkB,KAAK,MAAMC,aAAW,QAA5B,iKAEH5B,EAAK6B,KAAI,SAACT,GAAD,OACN,kBAAC,EAAD,CAAaU,IAAKV,EAAIE,IAAKF,IAAKA,SCkDjCW,EAzEC,SAACnD,GAAW,IAAD,EAECC,mBAAS,IAFV,mBAEhBC,EAFgB,KAEVC,EAFU,OAGCF,mBAAS,IAHV,mBAGhBG,EAHgB,KAGVC,EAHU,OAIeJ,mBAAS,IAJxB,mBAIhBK,EAJgB,KAIHC,EAJG,OAKSN,mBAAS,IALlB,mBAKhBO,EALgB,KAKNC,EALM,OAMSR,mBAAS,IANlB,mBAMhBS,EANgB,KAMNC,EANM,OAOaV,mBAAS,IAPtB,mBAOhBW,EAPgB,KAOJC,EAPI,OAQKZ,mBAAS,IARd,mBAQhBa,EARgB,KAQRC,EARQ,KAUvB8B,qBAAU,WACNxB,IAAMyB,IAAN,yCAA4C9C,EAAM0C,MAC7CnB,MAAK,SAAAC,GACFrB,EAAQqB,EAAIC,KAAKe,IAAItC,MACrBG,EAAQmB,EAAIC,KAAKe,IAAIpC,MACrBG,EAAeiB,EAAIC,KAAKe,IAAIlC,aAC5BG,EAAYe,EAAIC,KAAKe,IAAIhC,UACzBG,EAAYa,EAAIC,KAAKe,IAAI9B,UACzBG,EAAcW,EAAIC,KAAKe,IAAI5B,eAE9BgB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,CAAC7B,EAAM0C,MAiBV,OACI,yBAAK1B,UAAU,OAEX,yBAAKA,UAAU,0DAEX,0BAAMC,SApBQ,SAACC,GACvBA,EAAEC,iBACF,IAAMC,EAAO,CAAElB,OAAME,OAAME,cAAaE,WAAUE,WAAUE,cAC5DS,IAAM+B,IAAN,gDAAmDpD,EAAM0C,KAAOtB,GAC3DG,MAAK,SAAAC,GACFM,QAAQC,IAAIP,GACRA,EAAIC,KAAKC,MACTX,EAAUS,EAAIC,KAAKC,MAAMZ,QAEzBa,YAAS,QAGhBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QASlB,uBAAGb,UAAU,mBAAb,aACA,2BAAOZ,KAAK,OAAO4B,SAAU,SAAAd,GAAC,OAAIf,EAAQe,EAAEe,OAAOC,QAAQA,MAAOhC,IACjEY,EAAOZ,KAAO,uBAAGc,UAAU,eAAeF,EAAOZ,KAAKiC,WAAWC,SAAe,GAEjF,uBAAGpB,UAAU,mBAAb,cACA,2BAAOZ,KAAK,OAAO4B,SAAU,SAAAd,GAAC,OAAIb,EAAQa,EAAEe,OAAOC,QAAQA,MAAO9B,IACjEU,EAAOV,KAAO,uBAAGY,UAAU,eAAeF,EAAOV,KAAK+B,WAAWC,SAAe,GAEjF,uBAAGpB,UAAU,mBAAb,qBACA,8BAAUqB,KAAK,IAAIC,QAAQ,IAAIlC,KAAK,OAAO4B,SAAU,SAAAd,GAAC,OAAIX,EAAeW,EAAEe,OAAOC,QAAQA,MAAO5B,IAChGQ,EAAOR,YAAc,uBAAGU,UAAU,eAAeF,EAAOR,YAAY6B,WAAWC,SAAe,GAE/F,uBAAGpB,UAAU,mBAAb,gBACA,6BACI,2BAAOA,UAAU,MAAMZ,KAAK,OAAO4B,SAAU,SAAAd,GAAC,OAAIT,EAAYS,EAAEe,OAAOC,QAAQA,MAAO1B,KAE1F,6BACI,2BAAOQ,UAAU,MAAMZ,KAAK,OAAO4B,SAAU,SAAAd,GAAC,OAAIP,EAAYO,EAAEe,OAAOC,QAAQA,MAAOxB,KAE1F,6BACI,2BAAOM,UAAU,MAAMZ,KAAK,OAAO4B,SAAU,SAAAd,GAAC,OAAIL,EAAcK,EAAEe,OAAOC,QAAQA,MAAOtB,KAE5F,2BAAOI,UAAU,sBAAsBZ,KAAK,SAAS8B,MAAM,eCbhEmB,EArDQ,SAACrD,GAAW,IAAD,EACLC,mBAAS,IADJ,mBACvBC,EADuB,KACjBoD,EADiB,OAENrD,mBAAS,IAFH,mBAEvBG,EAFuB,KAEjBC,EAFiB,OAGQJ,mBAAS,IAHjB,mBAGvBK,EAHuB,KAGVC,EAHU,OAIEN,mBAAS,IAJX,mBAIvBO,EAJuB,KAIbC,EAJa,OAKER,mBAAS,IALX,mBAKvBS,EALuB,KAKbC,EALa,OAMMV,mBAAS,IANf,mBAMvBW,EANuB,KAMXC,EANW,OAOJZ,mBAAS,GAPL,mBAOvBsD,EAPuB,KAOhBC,EAPgB,OAQVvD,mBAAS,IAAtBc,EARuB,oBAU9B8B,qBAAU,WACNxB,IAAMyB,IAAN,yCAA4C9C,EAAM0C,MAC7CnB,MAAK,SAAAC,GACF8B,EAAS9B,EAAIC,KAAKe,IAAItC,MACtBG,EAAQmB,EAAIC,KAAKe,IAAIpC,MACrBG,EAAeiB,EAAIC,KAAKe,IAAIlC,aAC5BG,EAAYe,EAAIC,KAAKe,IAAIhC,UACzBG,EAAYa,EAAIC,KAAKe,IAAI9B,UACzBG,EAAcW,EAAIC,KAAKe,IAAI5B,YAC3BkB,QAAQC,IAAIP,MAEfI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,CAAC7B,EAAM0C,MAgBV,OACI,yBAAK1B,UAAU,0DACX,6BACI,uBAAGA,UAAU,kCAAb,aAAyDd,GACzD,uBAAGc,UAAU,kCAAb,aAAyDZ,GACzD,uBAAGY,UAAU,kCAAb,oBAAgEV,GAChE,uBAAGU,UAAU,kCAAb,eAA2DR,EAA3D,IAAsEE,EAAtE,IAAiFE,GACjF,uBAAGI,UAAU,kCAAb,UAAsDuC,GACtD,4BAAQvC,UAAU,sBAAsByC,QAtBlC,SAACvC,GACfA,EAAEC,iBACFE,IAAMqC,OAAN,gDAAsD1D,EAAM0C,MACvDnB,MAAK,SAAAC,GACFM,QAAQC,IAAIP,GACRA,EAAIC,KAAKC,MACTX,EAAUS,EAAIC,KAAKC,OAEnBC,YAAS,QAGhBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAWsCK,MAAOhC,GAAnE,SAAgFA,EAAhF,KACA,4BAAQc,UAAU,+BAA+ByC,QAAS,kBAAMD,EAASD,EAAQ,KAAjF,UAA6FA,MCnB9FI,MApBf,WACE,OACE,yBAAK3C,UAAU,WACb,yBAAKA,UAAU,gDACb,6BACE,0DAEF,kBAAC,IAAD,CAAMyB,GAAG,KAAI,4BAAQzB,UAAU,yBAAlB,SACb,kBAAC,IAAD,CAAMyB,GAAG,QAAO,4BAAQzB,UAAU,yBAAlB,YAChB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAS4C,KAAK,MACd,kBAACC,EAAD,CAASD,KAAK,SACd,kBAAC,EAAD,CAASA,KAAK,gBACd,kBAAC,EAAD,CAAgBA,KAAK,cCbXE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnD,MAAK,SAAAoD,GACJA,EAAaC,gBAEdhD,OAAM,SAAAF,GACLI,QAAQJ,MAAMA,EAAMU,c","file":"static/js/main.069ad647.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst CreatePet = (props) => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const [skillOne, setSkillOne] = useState(\"\")\n    const [skillTwo, setSkillTwo] = useState(\"\")\n    const [skillThree, setSkillThree] = useState(\"\")\n\n    const [errors, setErrors] = useState({});\n\n    const createNewPet = (e) => {\n        e.preventDefault();\n        const pets = { name, type, description, skillOne, skillTwo, skillThree };\n        axios.post(\"http://localhost:8000/api/pets/new\", pets)\n            .then(res => {\n                if (res.data.error) {\n                    setErrors(res.data.error.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"container-fluid \">\n            <div className=\"form-group bg-dark rounded shadow-lg text-dark\">\n                <form onSubmit={createNewPet}>\n                    <p className=\"text-light p-1\">Pet Name: </p>\n                    <input type=\"text\" onChange={e => setName(e.target.value)}></input>\n                    {errors.name ? <p className=\"text-danger \">{errors.name.properties.message}</p> : \"\"}\n                    <p className=\"text-light mt-1\">Pet Type: </p>\n                    <input type=\"text\" onChange={e => setType(e.target.value)}></input>\n                    {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p> : \"\"}\n\n                    <p className=\"text-light mt-1\">Pet Description: </p>\n                    <textarea rows=\"6\" columns=\"30\" type=\"text\" onChange={e => setDescription(e.target.value)} ></textarea>\n                    {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p> : \"\"}\n\n                    <p className=\"text-light mt-\">Pet Skills: </p>\n                    <div>\n                        <input className=\"m-1\" type=\" text\" onChange={e => setSkillOne(e.target.value)} value={skillOne}></input>\n                    </div>\n                    <div>\n                        <input className=\"m-1\" type=\" text\" onChange={e => setSkillTwo(e.target.value)} value={skillTwo}></input>\n                    </div>\n                    <div>\n                        <input className=\"m-1\" type=\" text\" onChange={e => setSkillThree(e.target.value)} value={skillThree}></input>\n                    </div>\n                    <div>\n                        <input className=\"btn btn-success m-2 \" type=\"submit\" value=\"Add\"></input>\n                    </div>\n\n                </form>\n            </div>\n        </div >\n    );\n};\n\nexport default CreatePet;","/* MAIN PAGE */\nimport React from 'react';\nimport { Link } from \"@reach/router\";\n\nconst PetHomePage = (props) => {\n    return (\n        <div className=\"m-2 p-2 bg-dark rounded shadow-lg text-dark \">\n            <h3 className=\"font-weight-bol text-light\">{props.pet.name}</h3>\n            <p className=\"text-light text-left mt-2 ml-2\">Pet Type: {props.pet.type}</p>\n            <p className=\"text-light text-left mt-2 ml-2\">Pet Description: {props.pet.description}</p>\n            <p className=\"text-light text-left mt-2 ml-2\">Pet Skills: {props.pet.skillOne} {props.pet.skillTwo} {props.pet.skillThree}</p>\n\n            <div>\n                <Link className=\"btn btn-secondary m-2 \" to={\"/update/\" + props.pet._id} >Edit</Link>\n                <Link className=\"btn btn-secondary m-2 \" to={\"/\" + props.pet._id}>Details</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default PetHomePage;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PetHomePage from \"./PetHomePage\";\n\nconst AllPets = (props) => {\n    const [pets, setPets] = useState([]);\n    const fetchPets = () => {\n        axios.get(\"http://localhost:8000/api/pets/\")\n            .then(res => {\n                console.log(res);\n                console.log(\"data:\", res.data.pet);\n                setPets(res.data.pet)\n            })\n            .catch(err => console.log(err));\n    }\n\n    useEffect(() => {\n        fetchPets();\n    }, []);\n\n    return (\n        <div>\n            <div>\n                <p>Please be good with all animals </p>\n                <span role=\"img\" aria-label=\"pets\">🐶🐱🐰🦊🐻🐼🐨🐯🦁🐮🐷🐸🐵</span>\n            </div>\n            {pets.map((pet) =>\n                <PetHomePage key={pet._id} pet={pet} />)}\n        </div>\n    );\n}\n\nexport default AllPets;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst EditPet = (props) => {\n\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                setName(res.data.pet.name);\n                setType(res.data.pet.type);\n                setDescription(res.data.pet.description);\n                setSkillOne(res.data.pet.skillOne)\n                setSkillTwo(res.data.pet.skillTwo)\n                setSkillThree(res.data.pet.skillThree)\n            })\n            .catch(err => console.log(err));\n    }, [props._id]);\n\n    const updateExistingPet = (e) => {\n        e.preventDefault();\n        const pets = { name, type, description, skillOne, skillTwo, skillThree };\n        axios.put(`http://localhost:8000/api/pets/update/${props._id}`, pets)\n            .then(res => {\n                console.log(res);\n                if (res.data.error) {\n                    setErrors(res.data.error.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"App\">\n            {/* <h2 className=\"font-weight-bold\">{name} {type}</h2> */}\n            <div className=\"form-group m-2 p-2 bg-dark rounded shadow-lg text-dark\">\n\n                <form onSubmit={updateExistingPet}>\n                    <p className=\"text-light mt-1\">Pet Name:</p>\n                    <input type=\"text\" onChange={e => setName(e.target.value)} value={name} />\n                    {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p> : \"\"}\n\n                    <p className=\"text-light mt-1\">Pet Type: </p>\n                    <input type=\"text\" onChange={e => setType(e.target.value)} value={type} />\n                    {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p> : \"\"}\n\n                    <p className=\"text-light mt-1\">Pet Description: </p>\n                    <textarea rows=\"5\" columns=\"1\" type=\"text\" onChange={e => setDescription(e.target.value)} value={description}></textarea>\n                    {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p> : \"\"}\n\n                    <p className=\"text-light mt-1\">Pet Skills: </p>\n                    <div>\n                        <input className=\"m-1\" type=\"text\" onChange={e => setSkillOne(e.target.value)} value={skillOne}></input>\n                    </div>\n                    <div>\n                        <input className=\"m-1\" type=\"text\" onChange={e => setSkillTwo(e.target.value)} value={skillTwo}></input>\n                    </div>\n                    <div>\n                        <input className=\"m-1\" type=\"text\" onChange={e => setSkillThree(e.target.value)} value={skillThree}></input>\n                    </div>\n                    <input className=\"btn btn-success m-2\" type=\"submit\" value=\"Update\"></input>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default EditPet;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst ShowPetDetails = (props) => {\n    const [name, setTitle] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [likes, setLikes] = useState(0);\n    const [setErrors] = useState({});\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                setTitle(res.data.pet.name);\n                setType(res.data.pet.type);\n                setDescription(res.data.pet.description);\n                setSkillOne(res.data.pet.skillOne);\n                setSkillTwo(res.data.pet.skillTwo);\n                setSkillThree(res.data.pet.skillThree);\n                console.log(res);\n            })\n            .catch(err => console.log(err));\n    }, [props._id]);\n\n    const deletePet = (e) => {\n        e.preventDefault();\n        axios.delete(`http://localhost:8000/api/pets/delete/${props._id}`)\n            .then(res => {\n                console.log(res);\n                if (res.data.error) {\n                    setErrors(res.data.error);\n                } else {\n                    navigate(\"/\");\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"form-group m-2 p-2 bg-dark rounded shadow-lg text-dark\">\n            <div>\n                <p className=\"text-light text-left mt-2 ml-2\">Pet Name: {name}</p>\n                <p className=\"text-light text-left mt-2 ml-2\">Pet Type: {type}</p>\n                <p className=\"text-light text-left mt-2 ml-2\">Pet Description: {description}</p>\n                <p className=\"text-light text-left mt-2 ml-2\">Pet Skills: {skillOne} {skillTwo} {skillThree}</p>\n                <p className=\"text-light text-left mt-2 ml-2\">Likes: {likes}</p>\n                <button className=\"btn btn-warning m-1\" onClick={deletePet} value={name}>Adopt {name} </button>\n                <button className=\"btn bg-success m-1 text-dark\" onClick={() => setLikes(likes + 1)}>Likes: {likes}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ShowPetDetails;","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport PetForm from './components/PetForm';\nimport AllPets from './components/AllPets';\nimport EditPet from './components/EditPet';\nimport ShowPetDetails from './components/ShowPetDetails';\n\nimport { Router, Link } from \"@reach/router\";\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"text-center container p-4 bg-dark text-light\">\n        <div>\n          <h1>⚜ Pet Shelter ⚜</h1>\n        </div>\n        <Link to=\"/\"><button className=\"btn btn-secondary m-4\">Home</button></Link>\n        <Link to=\"/new\"><button className=\"btn btn-secondary m-4\">Add Pet</button></Link>\n        <Router>\n          <AllPets path=\"/\" />\n          <PetForm path=\"/new\" />\n          <EditPet path=\"update/:_id\" />\n          <ShowPetDetails path=\"/:_id\" />\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}